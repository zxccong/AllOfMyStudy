<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
         updateCheck="false">

    <!--disStore : echache其实支持内存+磁盘+堆外内存，几个层级的缓存-->
    在这里设置一下一般不用
    <diskStore path="java.io.tmpdir/Tmp_EhCache" />

   <!-- defaultCache 默认的缓存策略-->
    <!--如果你指定的缓存策略没有找到那么就用默认的的缓存策略-->
    <!--external ： 如果设置为true的话，那么timeout就没有效果，缓存一直存在，默认是false-->
    <!--maxElementsInMemory: 内存中可以缓存多小个缓存条目，在实践中，要自己去计算 对象是什么 ？有多大？ 最多可以缓存多小MB GB？ 除以每个对象的大小-->
    <!--overflowToDisk： 如果内存不够是否溢出到磁盘，此处不溢出-->
    <!--diskPersistent ： 是否启用磁盘持久化机制，当JVM崩溃的时候重启之间，不用-->
    <!--timeToIdleSeconds： 对象最大闲置时间，如果超出闲置的时间就会过期，这里不用 毫秒-->
    <!--timeToLiveSeconds： 对象最多存活的时间，超过时间缓存就会过期，这里不用 毫秒-->
    <!--memoryStoreEvictionPolicy： 当缓存达到最大条目，采用一定的算法，从缓存中清楚一批数据，LRU，最近最小使用算法，最近一段时间内，最少使用的数据，就会被干掉-->

    <defaultCache
            eternal="false"
            maxElementsInMemory="1000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="0"
            timeToLiveSeconds="0"
            memoryStoreEvictionPolicy="LRU" />


    <!-- 手动指定的缓存策略 -->
    <!-- 比如一个应用多种不同的数据 -->
    <!-- 对不同的数据，缓存策略可以在这里配置多种 -->
    <cache
            name="local"
            eternal="false"
            maxElementsInMemory="1000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="0"
            timeToLiveSeconds="0"
            memoryStoreEvictionPolicy="LRU" />

</ehcache>